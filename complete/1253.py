# 특정한 1개의 원소를 골라서, 해당 원소를 제외한 리스트에서 투 포인터(Two-Pointer)를 통해 두 원소의 합이 선택한 원소와 같은지 비교하는 방식으로 해결할 수 있다.

# 1. arr 리스트를 정렬한다.

# 2. 0부터 N - 1 까지 반복문을 통해 특정 원소(arr[i])를 선택하고, 해당 원소를 제외한 arr 리스트를 생성한다.(tmp)

# 3. tmp 리스트에서 투 포인터를 통해 두 원소의 합(t)이 arr[i] 인지 비교한다.
# - t < arr[i] 이면 left 를 증가
# - t > arr[i] 이면 right 를 감소

# 4. 2, 3 과정을 반복한다.
import sys
input = sys.stdin.readline

N = int(input())
list = list(map(int,input().split()))
list.sort()
count = 0

for i in range(N):
    tmp = list[:i] + list[i+1:]
    print(tmp)
    left, right = 0, len(tmp) - 1
    while left < right:
        t = tmp[left] + tmp [right]
        if t == list[i]:
            count += 1
            break
        if t < list[i]: left += 1
        else:
            right -=1

print(count)

# 리스트 a에서 a[:7]과 같이 시작 인덱스를 생략하면 리스트의 처음부터 끝 인덱스 - 1(인덱스 6)까지 가져옵니다.
# 그리고 a[7:]과 같이 끝 인덱스를 생략하면 시작 인덱스(인덱스 7)부터 마지막 요소까지 가져옵니다
#  a[:]와 같이 시작 인덱스와 끝 인덱스를 둘다 생략하면 리스트 전체를 가져옵니다.
# 리스트 a에서 a[:7:2]와 같이 시작 인덱스를 생략하면서 인덱스 증가폭을 2로 지정하면 리스트의 처음부터 인덱스를 2씩 증가시키면서 끝 인덱스 - 1(인덱스 6)까지 요소를 가져옵니다.

# 1 2 3 4 5 6 7 8 9 10
# 1과 다른 수를 더했을 때 나올 수 있는 수 : 3,4,5,6,7,8,9,10
# 2와 다른 수를 더했을 때 나올 수 있는 수 : 3,5,6,7,8,9,10
# 3과 다른 수를 더했을 때 나올 수 있는 수 : 4,5,7,8,9,10
# 4와 다른 수를 더했을 때 나올 수 있는 수 : 5,6,7,9,10
# 5와 다른 수를 더했을 때 나올 수 있는 수 : 6,7,8,9
# 6과 다른 수를 더했을 때 나올 수 있는 수 : 7,8,9,10
# 7과 다른 수를 더했을 때 나올 수 있는 수 : 8,9,10
# 8과 다른 수를 더했을 때 나올 수 있는 수 : 9,10
# 9와 다른 수를 더했을 때 나올 수 있는 수 : 10

#하나의 숫자를 제외한 리스트를 임시로 만든다.
# 12345678910

# [0:0] + [1:9] = 2345678910 
# [0:1] + [2:9] = 1 + 345678910
# [0:2] + [3:9] = 1,2 + 45678910